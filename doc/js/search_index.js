var search_data = {"index":{"searchIndex":["evnt","command","event","handler","completed?()","error_codes()","error_messages()","errors()","new()","new()","notify()","reloaded?()","stop()","validate_presence()"],"longSearchIndex":["evnt","evnt::command","evnt::event","evnt::handler","evnt::command#completed?()","evnt::command#error_codes()","evnt::command#error_messages()","evnt::command#errors()","evnt::command::new()","evnt::event::new()","evnt::handler#notify()","evnt::event#reloaded?()","evnt::command#stop()","evnt::command#validate_presence()"],"info":[["Evnt","","Evnt.html","","<p>Evnt is a gem developed to integrate a test driven development and CQRS\npattern inside a ruby project. …\n"],["Evnt::Command","","Evnt/Command.html","","<p>Commands are used to run single tasks on the system. It&#39;s like a\ncontroller on an MVC architecture …\n"],["Evnt::Event","","Evnt/Event.html","","<p>Event.\n"],["Evnt::Handler","","Evnt/Handler.html","","<p>Handler.\n"],["completed?","Evnt::Command","Evnt/Command.html#method-i-completed-3F","()","<p>This function tells if the command is completed or not. The response should\nbe a boolean value.\n"],["error_codes","Evnt::Command","Evnt/Command.html#method-i-error_codes","()","<p>This function returns the list of error codes of the command. The response\nshould be an array of integers. …\n"],["error_messages","Evnt::Command","Evnt/Command.html#method-i-error_messages","()","<p>This function returns the list of error messages of the command. The\nresponse should be an array of strings. …\n"],["errors","Evnt::Command","Evnt/Command.html#method-i-errors","()","<p>This function returns the list of errors of the command. The response\nshould be an array of hash with …\n"],["new","Evnt::Command","Evnt/Command.html#method-c-new","(params, _options: {})","<p>The constructor is used to run a new command.\n<p>Attributes\n<p><code>params</code> - The list of parameters of for the command. …\n"],["new","Evnt::Event","Evnt/Event.html#method-c-new","(params)","<p>Constructor.\n"],["notify","Evnt::Handler","Evnt/Handler.html#method-i-notify","(event)","<p>This function is called when an event notify the handler\n"],["reloaded?","Evnt::Event","Evnt/Event.html#method-i-reloaded-3F","()","<p>This function tells if the event is reloaded or not. It should return a\nboolean value corresponding to …\n"],["stop","Evnt::Command","Evnt/Command.html#method-i-stop","(message, code: nil)","<p>This function can be used to stop the command execution and add a new\nerror. Using stop inside a callback …\n"],["validate_presence","Evnt::Command","Evnt/Command.html#method-i-validate_presence","(parameters)","<p>This function validates the presence of a list of parameters.\n"]]}}